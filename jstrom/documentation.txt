BubbleSort and HexConverter Algorithm Documentation
by Jeff Strom
===================================================
The first algorithm is an implementation of bubble sort.  The implementation is simple:  after setting up the array variables and getting the user input values for the array, the sorting algorithm then uses two "for" loops to compare/swap variables in adjacent array elements.  Since there are 5 elements in the array, it will take only 25 passes maximum to order a completely reversed-ordered array (which is the worst case scenario).  Hence, two nested "for" loops, iterated 5 times each, is more than enough to order any array entered.  This program is very, VERY simplistic.

The second algorithm is an implementation of a decimal to binary and hexadecimal converter.  First, the decimal value is converted to binary by modulo 2 arithmetic.  This yields a reverse-ordered String of values, so a new string is created, and a final "for" loop is used to save the binary value in the correct order.  For the hexadecimal converter, the binary string is used as an input, and groups of 4 binary digits are converted to their decimal equivalent, and then passed as an index for an array of the possible hexadecimal char values.  Then, since the resultant string is flipped, an output string is created with the values in their proper order.  This program is not optimized for efficiency, and could be streamlined further.